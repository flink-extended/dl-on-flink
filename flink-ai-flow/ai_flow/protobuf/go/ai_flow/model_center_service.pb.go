//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.15.6
// source: model_center_service.proto

package ai_flow

import (
	context "context"
	_ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateRegisteredModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisteredModel *RegisteredModelParam `protobuf:"bytes,1,opt,name=registered_model,json=registeredModel,proto3" json:"registered_model,omitempty"`
}

func (x *CreateRegisteredModelRequest) Reset() {
	*x = CreateRegisteredModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_center_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRegisteredModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegisteredModelRequest) ProtoMessage() {}

func (x *CreateRegisteredModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_center_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegisteredModelRequest.ProtoReflect.Descriptor instead.
func (*CreateRegisteredModelRequest) Descriptor() ([]byte, []int) {
	return file_model_center_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRegisteredModelRequest) GetRegisteredModel() *RegisteredModelParam {
	if x != nil {
		return x.RegisteredModel
	}
	return nil
}

type UpdateRegisteredModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelMeta       *ModelMetaParam       `protobuf:"bytes,1,opt,name=model_meta,json=modelMeta,proto3" json:"model_meta,omitempty"`
	RegisteredModel *RegisteredModelParam `protobuf:"bytes,2,opt,name=registered_model,json=registeredModel,proto3" json:"registered_model,omitempty"`
}

func (x *UpdateRegisteredModelRequest) Reset() {
	*x = UpdateRegisteredModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_center_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRegisteredModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRegisteredModelRequest) ProtoMessage() {}

func (x *UpdateRegisteredModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_center_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRegisteredModelRequest.ProtoReflect.Descriptor instead.
func (*UpdateRegisteredModelRequest) Descriptor() ([]byte, []int) {
	return file_model_center_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateRegisteredModelRequest) GetModelMeta() *ModelMetaParam {
	if x != nil {
		return x.ModelMeta
	}
	return nil
}

func (x *UpdateRegisteredModelRequest) GetRegisteredModel() *RegisteredModelParam {
	if x != nil {
		return x.RegisteredModel
	}
	return nil
}

type DeleteRegisteredModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelMeta *ModelMetaParam `protobuf:"bytes,1,opt,name=model_meta,json=modelMeta,proto3" json:"model_meta,omitempty"`
}

func (x *DeleteRegisteredModelRequest) Reset() {
	*x = DeleteRegisteredModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_center_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRegisteredModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRegisteredModelRequest) ProtoMessage() {}

func (x *DeleteRegisteredModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_center_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRegisteredModelRequest.ProtoReflect.Descriptor instead.
func (*DeleteRegisteredModelRequest) Descriptor() ([]byte, []int) {
	return file_model_center_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteRegisteredModelRequest) GetModelMeta() *ModelMetaParam {
	if x != nil {
		return x.ModelMeta
	}
	return nil
}

type ListRegisteredModelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRegisteredModelsRequest) Reset() {
	*x = ListRegisteredModelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_center_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRegisteredModelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegisteredModelsRequest) ProtoMessage() {}

func (x *ListRegisteredModelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_center_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegisteredModelsRequest.ProtoReflect.Descriptor instead.
func (*ListRegisteredModelsRequest) Descriptor() ([]byte, []int) {
	return file_model_center_service_proto_rawDescGZIP(), []int{3}
}

type GetRegisteredModelDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelMeta *ModelMetaParam `protobuf:"bytes,1,opt,name=model_meta,json=modelMeta,proto3" json:"model_meta,omitempty"`
}

func (x *GetRegisteredModelDetailRequest) Reset() {
	*x = GetRegisteredModelDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_center_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegisteredModelDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegisteredModelDetailRequest) ProtoMessage() {}

func (x *GetRegisteredModelDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_center_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegisteredModelDetailRequest.ProtoReflect.Descriptor instead.
func (*GetRegisteredModelDetailRequest) Descriptor() ([]byte, []int) {
	return file_model_center_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetRegisteredModelDetailRequest) GetModelMeta() *ModelMetaParam {
	if x != nil {
		return x.ModelMeta
	}
	return nil
}

type CreateModelVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelMeta    *ModelMetaParam    `protobuf:"bytes,1,opt,name=model_meta,json=modelMeta,proto3" json:"model_meta,omitempty"`
	ModelVersion *ModelVersionParam `protobuf:"bytes,2,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"`
}

func (x *CreateModelVersionRequest) Reset() {
	*x = CreateModelVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_center_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateModelVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateModelVersionRequest) ProtoMessage() {}

func (x *CreateModelVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_center_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateModelVersionRequest.ProtoReflect.Descriptor instead.
func (*CreateModelVersionRequest) Descriptor() ([]byte, []int) {
	return file_model_center_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateModelVersionRequest) GetModelMeta() *ModelMetaParam {
	if x != nil {
		return x.ModelMeta
	}
	return nil
}

func (x *CreateModelVersionRequest) GetModelVersion() *ModelVersionParam {
	if x != nil {
		return x.ModelVersion
	}
	return nil
}

type UpdateModelVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelMeta    *ModelMetaParam    `protobuf:"bytes,1,opt,name=model_meta,json=modelMeta,proto3" json:"model_meta,omitempty"`
	ModelVersion *ModelVersionParam `protobuf:"bytes,2,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"`
}

func (x *UpdateModelVersionRequest) Reset() {
	*x = UpdateModelVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_center_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateModelVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateModelVersionRequest) ProtoMessage() {}

func (x *UpdateModelVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_center_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateModelVersionRequest.ProtoReflect.Descriptor instead.
func (*UpdateModelVersionRequest) Descriptor() ([]byte, []int) {
	return file_model_center_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateModelVersionRequest) GetModelMeta() *ModelMetaParam {
	if x != nil {
		return x.ModelMeta
	}
	return nil
}

func (x *UpdateModelVersionRequest) GetModelVersion() *ModelVersionParam {
	if x != nil {
		return x.ModelVersion
	}
	return nil
}

type DeleteModelVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelMeta *ModelMetaParam `protobuf:"bytes,1,opt,name=model_meta,json=modelMeta,proto3" json:"model_meta,omitempty"`
}

func (x *DeleteModelVersionRequest) Reset() {
	*x = DeleteModelVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_center_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteModelVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModelVersionRequest) ProtoMessage() {}

func (x *DeleteModelVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_center_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModelVersionRequest.ProtoReflect.Descriptor instead.
func (*DeleteModelVersionRequest) Descriptor() ([]byte, []int) {
	return file_model_center_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteModelVersionRequest) GetModelMeta() *ModelMetaParam {
	if x != nil {
		return x.ModelMeta
	}
	return nil
}

type GetModelVersionDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelMeta *ModelMetaParam `protobuf:"bytes,1,opt,name=model_meta,json=modelMeta,proto3" json:"model_meta,omitempty"`
}

func (x *GetModelVersionDetailRequest) Reset() {
	*x = GetModelVersionDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_center_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelVersionDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelVersionDetailRequest) ProtoMessage() {}

func (x *GetModelVersionDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_center_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelVersionDetailRequest.ProtoReflect.Descriptor instead.
func (*GetModelVersionDetailRequest) Descriptor() ([]byte, []int) {
	return file_model_center_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetModelVersionDetailRequest) GetModelMeta() *ModelMetaParam {
	if x != nil {
		return x.ModelMeta
	}
	return nil
}

var File_model_center_service_proto protoreflect.FileDescriptor

var file_model_center_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x69,
	0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x1a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x68, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x48, 0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61,
	0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0xa0, 0x01, 0x0a,
	0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a,
	0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0f,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22,
	0x56, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x36, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x09, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x1d, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74,
	0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74,
	0x61, 0x22, 0x94, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x36, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x09, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x94, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x69, 0x5f,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x3f,
	0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x53, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x4d, 0x65, 0x74, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x4d, 0x65, 0x74, 0x61, 0x22, 0x56, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x32, 0xd4, 0x09, 0x0a,
	0x12, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x25, 0x2e,
	0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x22,
	0x2a, 0x2f, 0x61, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x2d, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x88,
	0x01, 0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x25, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x11, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x32, 0x2a, 0x2f, 0x61, 0x69, 0x66,
	0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x88, 0x01, 0x0a, 0x15, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x25, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x69, 0x5f,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x32, 0x2a, 0x2f, 0x61, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x3a, 0x01, 0x2a, 0x12, 0x81, 0x01, 0x0a, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x24, 0x2e,
	0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28,
	0x2f, 0x61, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x2d, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x88, 0x01, 0x0a, 0x18, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x11, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x61, 0x69, 0x66,
	0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f,
	0x67, 0x65, 0x74, 0x12, 0x81, 0x01, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x61, 0x69, 0x5f,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11,
	0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x22, 0x29, 0x2f, 0x61, 0x69, 0x66, 0x6c,
	0x6f, 0x77, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x81, 0x01, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x32, 0x29, 0x2f,
	0x61, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x81, 0x01, 0x0a, 0x12,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2e, 0x32, 0x29, 0x2f, 0x61, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12,
	0x81, 0x01, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x2e, 0x61, 0x69, 0x5f, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x61, 0x69,
	0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f,
	0x67, 0x65, 0x74, 0x42, 0x29, 0x0a, 0x17, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x69, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x08,
	0x2f, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x88, 0x01, 0x01, 0x90, 0x01, 0x01, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_center_service_proto_rawDescOnce sync.Once
	file_model_center_service_proto_rawDescData = file_model_center_service_proto_rawDesc
)

func file_model_center_service_proto_rawDescGZIP() []byte {
	file_model_center_service_proto_rawDescOnce.Do(func() {
		file_model_center_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_center_service_proto_rawDescData)
	})
	return file_model_center_service_proto_rawDescData
}

var file_model_center_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_model_center_service_proto_goTypes = []interface{}{
	(*CreateRegisteredModelRequest)(nil),    // 0: ai_flow.CreateRegisteredModelRequest
	(*UpdateRegisteredModelRequest)(nil),    // 1: ai_flow.UpdateRegisteredModelRequest
	(*DeleteRegisteredModelRequest)(nil),    // 2: ai_flow.DeleteRegisteredModelRequest
	(*ListRegisteredModelsRequest)(nil),     // 3: ai_flow.ListRegisteredModelsRequest
	(*GetRegisteredModelDetailRequest)(nil), // 4: ai_flow.GetRegisteredModelDetailRequest
	(*CreateModelVersionRequest)(nil),       // 5: ai_flow.CreateModelVersionRequest
	(*UpdateModelVersionRequest)(nil),       // 6: ai_flow.UpdateModelVersionRequest
	(*DeleteModelVersionRequest)(nil),       // 7: ai_flow.DeleteModelVersionRequest
	(*GetModelVersionDetailRequest)(nil),    // 8: ai_flow.GetModelVersionDetailRequest
	(*RegisteredModelParam)(nil),            // 9: ai_flow.RegisteredModelParam
	(*ModelMetaParam)(nil),                  // 10: ai_flow.ModelMetaParam
	(*ModelVersionParam)(nil),               // 11: ai_flow.ModelVersionParam
	(*Response)(nil),                        // 12: ai_flow.Response
}
var file_model_center_service_proto_depIdxs = []int32{
	9,  // 0: ai_flow.CreateRegisteredModelRequest.registered_model:type_name -> ai_flow.RegisteredModelParam
	10, // 1: ai_flow.UpdateRegisteredModelRequest.model_meta:type_name -> ai_flow.ModelMetaParam
	9,  // 2: ai_flow.UpdateRegisteredModelRequest.registered_model:type_name -> ai_flow.RegisteredModelParam
	10, // 3: ai_flow.DeleteRegisteredModelRequest.model_meta:type_name -> ai_flow.ModelMetaParam
	10, // 4: ai_flow.GetRegisteredModelDetailRequest.model_meta:type_name -> ai_flow.ModelMetaParam
	10, // 5: ai_flow.CreateModelVersionRequest.model_meta:type_name -> ai_flow.ModelMetaParam
	11, // 6: ai_flow.CreateModelVersionRequest.model_version:type_name -> ai_flow.ModelVersionParam
	10, // 7: ai_flow.UpdateModelVersionRequest.model_meta:type_name -> ai_flow.ModelMetaParam
	11, // 8: ai_flow.UpdateModelVersionRequest.model_version:type_name -> ai_flow.ModelVersionParam
	10, // 9: ai_flow.DeleteModelVersionRequest.model_meta:type_name -> ai_flow.ModelMetaParam
	10, // 10: ai_flow.GetModelVersionDetailRequest.model_meta:type_name -> ai_flow.ModelMetaParam
	0,  // 11: ai_flow.ModelCenterService.createRegisteredModel:input_type -> ai_flow.CreateRegisteredModelRequest
	1,  // 12: ai_flow.ModelCenterService.updateRegisteredModel:input_type -> ai_flow.UpdateRegisteredModelRequest
	2,  // 13: ai_flow.ModelCenterService.deleteRegisteredModel:input_type -> ai_flow.DeleteRegisteredModelRequest
	3,  // 14: ai_flow.ModelCenterService.listRegisteredModels:input_type -> ai_flow.ListRegisteredModelsRequest
	4,  // 15: ai_flow.ModelCenterService.getRegisteredModelDetail:input_type -> ai_flow.GetRegisteredModelDetailRequest
	5,  // 16: ai_flow.ModelCenterService.createModelVersion:input_type -> ai_flow.CreateModelVersionRequest
	6,  // 17: ai_flow.ModelCenterService.updateModelVersion:input_type -> ai_flow.UpdateModelVersionRequest
	7,  // 18: ai_flow.ModelCenterService.deleteModelVersion:input_type -> ai_flow.DeleteModelVersionRequest
	8,  // 19: ai_flow.ModelCenterService.getModelVersionDetail:input_type -> ai_flow.GetModelVersionDetailRequest
	12, // 20: ai_flow.ModelCenterService.createRegisteredModel:output_type -> ai_flow.Response
	12, // 21: ai_flow.ModelCenterService.updateRegisteredModel:output_type -> ai_flow.Response
	12, // 22: ai_flow.ModelCenterService.deleteRegisteredModel:output_type -> ai_flow.Response
	12, // 23: ai_flow.ModelCenterService.listRegisteredModels:output_type -> ai_flow.Response
	12, // 24: ai_flow.ModelCenterService.getRegisteredModelDetail:output_type -> ai_flow.Response
	12, // 25: ai_flow.ModelCenterService.createModelVersion:output_type -> ai_flow.Response
	12, // 26: ai_flow.ModelCenterService.updateModelVersion:output_type -> ai_flow.Response
	12, // 27: ai_flow.ModelCenterService.deleteModelVersion:output_type -> ai_flow.Response
	12, // 28: ai_flow.ModelCenterService.getModelVersionDetail:output_type -> ai_flow.Response
	20, // [20:29] is the sub-list for method output_type
	11, // [11:20] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_model_center_service_proto_init() }
func file_model_center_service_proto_init() {
	if File_model_center_service_proto != nil {
		return
	}
	file_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_model_center_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRegisteredModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_center_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRegisteredModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_center_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRegisteredModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_center_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRegisteredModelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_center_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegisteredModelDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_center_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateModelVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_center_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateModelVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_center_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteModelVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_center_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelVersionDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_center_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_model_center_service_proto_goTypes,
		DependencyIndexes: file_model_center_service_proto_depIdxs,
		MessageInfos:      file_model_center_service_proto_msgTypes,
	}.Build()
	File_model_center_service_proto = out.File
	file_model_center_service_proto_rawDesc = nil
	file_model_center_service_proto_goTypes = nil
	file_model_center_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ModelCenterServiceClient is the client API for ModelCenterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ModelCenterServiceClient interface {
	// Create registered model with metadata of RegisteredModel.
	CreateRegisteredModel(ctx context.Context, in *CreateRegisteredModelRequest, opts ...grpc.CallOption) (*Response, error)
	// Update registered model with metadata of RegisteredModel.
	UpdateRegisteredModel(ctx context.Context, in *UpdateRegisteredModelRequest, opts ...grpc.CallOption) (*Response, error)
	// Delete registered model with metadata of RegisteredModel.
	DeleteRegisteredModel(ctx context.Context, in *DeleteRegisteredModelRequest, opts ...grpc.CallOption) (*Response, error)
	// List registered models about metadata of RegisteredModel.
	ListRegisteredModels(ctx context.Context, in *ListRegisteredModelsRequest, opts ...grpc.CallOption) (*Response, error)
	// Get registered model detail including metadata of RegisteredModel.
	GetRegisteredModelDetail(ctx context.Context, in *GetRegisteredModelDetailRequest, opts ...grpc.CallOption) (*Response, error)
	// Create model version with metadata of ModelVersion.
	CreateModelVersion(ctx context.Context, in *CreateModelVersionRequest, opts ...grpc.CallOption) (*Response, error)
	// Update model version with metadata of ModelVersion.
	UpdateModelVersion(ctx context.Context, in *UpdateModelVersionRequest, opts ...grpc.CallOption) (*Response, error)
	// Delete model version with metadata of ModelVersion.
	DeleteModelVersion(ctx context.Context, in *DeleteModelVersionRequest, opts ...grpc.CallOption) (*Response, error)
	// Get model version detail with metadata of ModelVersion.
	GetModelVersionDetail(ctx context.Context, in *GetModelVersionDetailRequest, opts ...grpc.CallOption) (*Response, error)
}

type modelCenterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewModelCenterServiceClient(cc grpc.ClientConnInterface) ModelCenterServiceClient {
	return &modelCenterServiceClient{cc}
}

func (c *modelCenterServiceClient) CreateRegisteredModel(ctx context.Context, in *CreateRegisteredModelRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/ai_flow.ModelCenterService/createRegisteredModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelCenterServiceClient) UpdateRegisteredModel(ctx context.Context, in *UpdateRegisteredModelRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/ai_flow.ModelCenterService/updateRegisteredModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelCenterServiceClient) DeleteRegisteredModel(ctx context.Context, in *DeleteRegisteredModelRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/ai_flow.ModelCenterService/deleteRegisteredModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelCenterServiceClient) ListRegisteredModels(ctx context.Context, in *ListRegisteredModelsRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/ai_flow.ModelCenterService/listRegisteredModels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelCenterServiceClient) GetRegisteredModelDetail(ctx context.Context, in *GetRegisteredModelDetailRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/ai_flow.ModelCenterService/getRegisteredModelDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelCenterServiceClient) CreateModelVersion(ctx context.Context, in *CreateModelVersionRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/ai_flow.ModelCenterService/createModelVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelCenterServiceClient) UpdateModelVersion(ctx context.Context, in *UpdateModelVersionRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/ai_flow.ModelCenterService/updateModelVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelCenterServiceClient) DeleteModelVersion(ctx context.Context, in *DeleteModelVersionRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/ai_flow.ModelCenterService/deleteModelVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelCenterServiceClient) GetModelVersionDetail(ctx context.Context, in *GetModelVersionDetailRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/ai_flow.ModelCenterService/getModelVersionDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ModelCenterServiceServer is the server API for ModelCenterService service.
type ModelCenterServiceServer interface {
	// Create registered model with metadata of RegisteredModel.
	CreateRegisteredModel(context.Context, *CreateRegisteredModelRequest) (*Response, error)
	// Update registered model with metadata of RegisteredModel.
	UpdateRegisteredModel(context.Context, *UpdateRegisteredModelRequest) (*Response, error)
	// Delete registered model with metadata of RegisteredModel.
	DeleteRegisteredModel(context.Context, *DeleteRegisteredModelRequest) (*Response, error)
	// List registered models about metadata of RegisteredModel.
	ListRegisteredModels(context.Context, *ListRegisteredModelsRequest) (*Response, error)
	// Get registered model detail including metadata of RegisteredModel.
	GetRegisteredModelDetail(context.Context, *GetRegisteredModelDetailRequest) (*Response, error)
	// Create model version with metadata of ModelVersion.
	CreateModelVersion(context.Context, *CreateModelVersionRequest) (*Response, error)
	// Update model version with metadata of ModelVersion.
	UpdateModelVersion(context.Context, *UpdateModelVersionRequest) (*Response, error)
	// Delete model version with metadata of ModelVersion.
	DeleteModelVersion(context.Context, *DeleteModelVersionRequest) (*Response, error)
	// Get model version detail with metadata of ModelVersion.
	GetModelVersionDetail(context.Context, *GetModelVersionDetailRequest) (*Response, error)
}

// UnimplementedModelCenterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedModelCenterServiceServer struct {
}

func (*UnimplementedModelCenterServiceServer) CreateRegisteredModel(context.Context, *CreateRegisteredModelRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRegisteredModel not implemented")
}
func (*UnimplementedModelCenterServiceServer) UpdateRegisteredModel(context.Context, *UpdateRegisteredModelRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRegisteredModel not implemented")
}
func (*UnimplementedModelCenterServiceServer) DeleteRegisteredModel(context.Context, *DeleteRegisteredModelRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRegisteredModel not implemented")
}
func (*UnimplementedModelCenterServiceServer) ListRegisteredModels(context.Context, *ListRegisteredModelsRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRegisteredModels not implemented")
}
func (*UnimplementedModelCenterServiceServer) GetRegisteredModelDetail(context.Context, *GetRegisteredModelDetailRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegisteredModelDetail not implemented")
}
func (*UnimplementedModelCenterServiceServer) CreateModelVersion(context.Context, *CreateModelVersionRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateModelVersion not implemented")
}
func (*UnimplementedModelCenterServiceServer) UpdateModelVersion(context.Context, *UpdateModelVersionRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateModelVersion not implemented")
}
func (*UnimplementedModelCenterServiceServer) DeleteModelVersion(context.Context, *DeleteModelVersionRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteModelVersion not implemented")
}
func (*UnimplementedModelCenterServiceServer) GetModelVersionDetail(context.Context, *GetModelVersionDetailRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelVersionDetail not implemented")
}

func RegisterModelCenterServiceServer(s *grpc.Server, srv ModelCenterServiceServer) {
	s.RegisterService(&_ModelCenterService_serviceDesc, srv)
}

func _ModelCenterService_CreateRegisteredModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRegisteredModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelCenterServiceServer).CreateRegisteredModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.ModelCenterService/CreateRegisteredModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelCenterServiceServer).CreateRegisteredModel(ctx, req.(*CreateRegisteredModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelCenterService_UpdateRegisteredModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRegisteredModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelCenterServiceServer).UpdateRegisteredModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.ModelCenterService/UpdateRegisteredModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelCenterServiceServer).UpdateRegisteredModel(ctx, req.(*UpdateRegisteredModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelCenterService_DeleteRegisteredModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRegisteredModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelCenterServiceServer).DeleteRegisteredModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.ModelCenterService/DeleteRegisteredModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelCenterServiceServer).DeleteRegisteredModel(ctx, req.(*DeleteRegisteredModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelCenterService_ListRegisteredModels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRegisteredModelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelCenterServiceServer).ListRegisteredModels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.ModelCenterService/ListRegisteredModels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelCenterServiceServer).ListRegisteredModels(ctx, req.(*ListRegisteredModelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelCenterService_GetRegisteredModelDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRegisteredModelDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelCenterServiceServer).GetRegisteredModelDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.ModelCenterService/GetRegisteredModelDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelCenterServiceServer).GetRegisteredModelDetail(ctx, req.(*GetRegisteredModelDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelCenterService_CreateModelVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateModelVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelCenterServiceServer).CreateModelVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.ModelCenterService/CreateModelVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelCenterServiceServer).CreateModelVersion(ctx, req.(*CreateModelVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelCenterService_UpdateModelVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateModelVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelCenterServiceServer).UpdateModelVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.ModelCenterService/UpdateModelVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelCenterServiceServer).UpdateModelVersion(ctx, req.(*UpdateModelVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelCenterService_DeleteModelVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteModelVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelCenterServiceServer).DeleteModelVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.ModelCenterService/DeleteModelVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelCenterServiceServer).DeleteModelVersion(ctx, req.(*DeleteModelVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelCenterService_GetModelVersionDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetModelVersionDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelCenterServiceServer).GetModelVersionDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.ModelCenterService/GetModelVersionDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelCenterServiceServer).GetModelVersionDetail(ctx, req.(*GetModelVersionDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ModelCenterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ai_flow.ModelCenterService",
	HandlerType: (*ModelCenterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createRegisteredModel",
			Handler:    _ModelCenterService_CreateRegisteredModel_Handler,
		},
		{
			MethodName: "updateRegisteredModel",
			Handler:    _ModelCenterService_UpdateRegisteredModel_Handler,
		},
		{
			MethodName: "deleteRegisteredModel",
			Handler:    _ModelCenterService_DeleteRegisteredModel_Handler,
		},
		{
			MethodName: "listRegisteredModels",
			Handler:    _ModelCenterService_ListRegisteredModels_Handler,
		},
		{
			MethodName: "getRegisteredModelDetail",
			Handler:    _ModelCenterService_GetRegisteredModelDetail_Handler,
		},
		{
			MethodName: "createModelVersion",
			Handler:    _ModelCenterService_CreateModelVersion_Handler,
		},
		{
			MethodName: "updateModelVersion",
			Handler:    _ModelCenterService_UpdateModelVersion_Handler,
		},
		{
			MethodName: "deleteModelVersion",
			Handler:    _ModelCenterService_DeleteModelVersion_Handler,
		},
		{
			MethodName: "getModelVersionDetail",
			Handler:    _ModelCenterService_GetModelVersionDetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "model_center_service.proto",
}
