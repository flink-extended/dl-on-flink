//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.11.3
// source: metric_service.proto

package ai_flow

import (
	context "context"
	//_ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UuidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid int64 `protobuf:"varint,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *UuidRequest) Reset() {
	*x = UuidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UuidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UuidRequest) ProtoMessage() {}

func (x *UuidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metric_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UuidRequest.ProtoReflect.Descriptor instead.
func (*UuidRequest) Descriptor() ([]byte, []int) {
	return file_metric_service_proto_rawDescGZIP(), []int{0}
}

func (x *UuidRequest) GetUuid() int64 {
	if x != nil {
		return x.Uuid
	}
	return 0
}

type MetricMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricMeta *MetricMetaProto `protobuf:"bytes,1,opt,name=metric_meta,json=metricMeta,proto3" json:"metric_meta,omitempty"`
}

func (x *MetricMetaRequest) Reset() {
	*x = MetricMetaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricMetaRequest) ProtoMessage() {}

func (x *MetricMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metric_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricMetaRequest.ProtoReflect.Descriptor instead.
func (*MetricMetaRequest) Descriptor() ([]byte, []int) {
	return file_metric_service_proto_rawDescGZIP(), []int{1}
}

func (x *MetricMetaRequest) GetMetricMeta() *MetricMetaProto {
	if x != nil {
		return x.MetricMeta
	}
	return nil
}

type MetricMetaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode int64            `protobuf:"varint,1,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	ReturnMsg  string           `protobuf:"bytes,2,opt,name=return_msg,json=returnMsg,proto3" json:"return_msg,omitempty"`
	MetricMeta *MetricMetaProto `protobuf:"bytes,3,opt,name=metric_meta,json=metricMeta,proto3" json:"metric_meta,omitempty"`
}

func (x *MetricMetaResponse) Reset() {
	*x = MetricMetaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricMetaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricMetaResponse) ProtoMessage() {}

func (x *MetricMetaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metric_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricMetaResponse.ProtoReflect.Descriptor instead.
func (*MetricMetaResponse) Descriptor() ([]byte, []int) {
	return file_metric_service_proto_rawDescGZIP(), []int{2}
}

func (x *MetricMetaResponse) GetReturnCode() int64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *MetricMetaResponse) GetReturnMsg() string {
	if x != nil {
		return x.ReturnMsg
	}
	return ""
}

func (x *MetricMetaResponse) GetMetricMeta() *MetricMetaProto {
	if x != nil {
		return x.MetricMeta
	}
	return nil
}

type MetricSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricSummary *MetricSummaryProto `protobuf:"bytes,1,opt,name=metric_summary,json=metricSummary,proto3" json:"metric_summary,omitempty"`
}

func (x *MetricSummaryRequest) Reset() {
	*x = MetricSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricSummaryRequest) ProtoMessage() {}

func (x *MetricSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metric_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricSummaryRequest.ProtoReflect.Descriptor instead.
func (*MetricSummaryRequest) Descriptor() ([]byte, []int) {
	return file_metric_service_proto_rawDescGZIP(), []int{3}
}

func (x *MetricSummaryRequest) GetMetricSummary() *MetricSummaryProto {
	if x != nil {
		return x.MetricSummary
	}
	return nil
}

type MetricSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode    int64               `protobuf:"varint,1,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	ReturnMsg     string              `protobuf:"bytes,2,opt,name=return_msg,json=returnMsg,proto3" json:"return_msg,omitempty"`
	MetricSummary *MetricSummaryProto `protobuf:"bytes,3,opt,name=metric_summary,json=metricSummary,proto3" json:"metric_summary,omitempty"`
}

func (x *MetricSummaryResponse) Reset() {
	*x = MetricSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricSummaryResponse) ProtoMessage() {}

func (x *MetricSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metric_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricSummaryResponse.ProtoReflect.Descriptor instead.
func (*MetricSummaryResponse) Descriptor() ([]byte, []int) {
	return file_metric_service_proto_rawDescGZIP(), []int{4}
}

func (x *MetricSummaryResponse) GetReturnCode() int64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *MetricSummaryResponse) GetReturnMsg() string {
	if x != nil {
		return x.ReturnMsg
	}
	return ""
}

func (x *MetricSummaryResponse) GetMetricSummary() *MetricSummaryProto {
	if x != nil {
		return x.MetricSummary
	}
	return nil
}

type GetMetricMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricName string `protobuf:"bytes,1,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
}

func (x *GetMetricMetaRequest) Reset() {
	*x = GetMetricMetaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricMetaRequest) ProtoMessage() {}

func (x *GetMetricMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metric_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricMetaRequest.ProtoReflect.Descriptor instead.
func (*GetMetricMetaRequest) Descriptor() ([]byte, []int) {
	return file_metric_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetMetricMetaRequest) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

type GetDataSetMetricMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId int64 `protobuf:"varint,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
}

func (x *GetDataSetMetricMetaRequest) Reset() {
	*x = GetDataSetMetricMetaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataSetMetricMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataSetMetricMetaRequest) ProtoMessage() {}

func (x *GetDataSetMetricMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metric_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataSetMetricMetaRequest.ProtoReflect.Descriptor instead.
func (*GetDataSetMetricMetaRequest) Descriptor() ([]byte, []int) {
	return file_metric_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetDataSetMetricMetaRequest) GetDatasetId() int64 {
	if x != nil {
		return x.DatasetId
	}
	return 0
}

type GetModelMetricMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelName    string `protobuf:"bytes,1,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	ModelVersion string `protobuf:"bytes,2,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"`
}

func (x *GetModelMetricMetaRequest) Reset() {
	*x = GetModelMetricMetaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelMetricMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelMetricMetaRequest) ProtoMessage() {}

func (x *GetModelMetricMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metric_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelMetricMetaRequest.ProtoReflect.Descriptor instead.
func (*GetModelMetricMetaRequest) Descriptor() ([]byte, []int) {
	return file_metric_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetModelMetricMetaRequest) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *GetModelMetricMetaRequest) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

type ListMetricMetaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode int64              `protobuf:"varint,1,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	ReturnMsg  string             `protobuf:"bytes,2,opt,name=return_msg,json=returnMsg,proto3" json:"return_msg,omitempty"`
	MetricMeta []*MetricMetaProto `protobuf:"bytes,3,rep,name=metric_meta,json=metricMeta,proto3" json:"metric_meta,omitempty"`
}

func (x *ListMetricMetaResponse) Reset() {
	*x = ListMetricMetaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricMetaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricMetaResponse) ProtoMessage() {}

func (x *ListMetricMetaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metric_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricMetaResponse.ProtoReflect.Descriptor instead.
func (*ListMetricMetaResponse) Descriptor() ([]byte, []int) {
	return file_metric_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListMetricMetaResponse) GetReturnCode() int64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *ListMetricMetaResponse) GetReturnMsg() string {
	if x != nil {
		return x.ReturnMsg
	}
	return ""
}

func (x *ListMetricMetaResponse) GetMetricMeta() []*MetricMetaProto {
	if x != nil {
		return x.MetricMeta
	}
	return nil
}

type GetMetricSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricId int64 `protobuf:"varint,1,opt,name=metric_id,json=metricId,proto3" json:"metric_id,omitempty"`
}

func (x *GetMetricSummaryRequest) Reset() {
	*x = GetMetricSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetricSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricSummaryRequest) ProtoMessage() {}

func (x *GetMetricSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metric_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetMetricSummaryRequest) Descriptor() ([]byte, []int) {
	return file_metric_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetMetricSummaryRequest) GetMetricId() int64 {
	if x != nil {
		return x.MetricId
	}
	return 0
}

type ListMetricSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode    int64                 `protobuf:"varint,1,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	ReturnMsg     string                `protobuf:"bytes,2,opt,name=return_msg,json=returnMsg,proto3" json:"return_msg,omitempty"`
	MetricSummary []*MetricSummaryProto `protobuf:"bytes,3,rep,name=metric_summary,json=metricSummary,proto3" json:"metric_summary,omitempty"`
}

func (x *ListMetricSummaryResponse) Reset() {
	*x = ListMetricSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricSummaryResponse) ProtoMessage() {}

func (x *ListMetricSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metric_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricSummaryResponse.ProtoReflect.Descriptor instead.
func (*ListMetricSummaryResponse) Descriptor() ([]byte, []int) {
	return file_metric_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListMetricSummaryResponse) GetReturnCode() int64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *ListMetricSummaryResponse) GetReturnMsg() string {
	if x != nil {
		return x.ReturnMsg
	}
	return ""
}

func (x *ListMetricSummaryResponse) GetMetricSummary() []*MetricSummaryProto {
	if x != nil {
		return x.MetricSummary
	}
	return nil
}

var File_metric_service_proto protoreflect.FileDescriptor

var file_metric_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x1a,
	0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x0b,
	0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0x4e, 0x0a, 0x11, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x69, 0x5f, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x22,
	0x8f, 0x01, 0x0a, 0x12, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x69,
	0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74,
	0x61, 0x22, 0x5a, 0x0a, 0x14, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x9b, 0x01,
	0x0a, 0x15, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x42, 0x0a, 0x0e, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x37, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x22, 0x5f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x93, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x39,
	0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x36, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x49,
	0x64, 0x22, 0x9f, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x73, 0x67, 0x12,
	0x42, 0x0a, 0x0e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x32, 0x96, 0x0a, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7b, 0x0a, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1a, 0x2e, 0x61, 0x69,
	0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x21, 0x2f, 0x61,
	0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0x87, 0x01, 0x0a, 0x15, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x61,
	0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x69,
	0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x29, 0x22, 0x24, 0x2f, 0x61, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x79, 0x0a, 0x10,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x1a, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61,
	0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x26, 0x22, 0x21, 0x2f, 0x61, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x76, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1d, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e, 0x2f, 0x61,
	0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x67, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x12,
	0x85, 0x01, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x22, 0x24,
	0x2f, 0x61, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x90, 0x01, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x24, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22,
	0x26, 0x2f, 0x61, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2f,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x8a, 0x01, 0x0a, 0x12, 0x67,
	0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x22, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x22, 0x24,
	0x2f, 0x61, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2f, 0x67, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x86, 0x01, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x20, 0x2e, 0x61,
	0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x21, 0x2f, 0x61, 0x69, 0x66,
	0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2f, 0x67, 0x65, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x69, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x55,
	0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x69, 0x5f,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x21, 0x2f, 0x61, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x6f, 0x0a, 0x13, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x14, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x55, 0x75, 0x69,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x69, 0x5f, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x29, 0x22, 0x24, 0x2f, 0x61, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0x22, 0x0a, 0x10,
	0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x69, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5a, 0x08, 0x2f, 0x61, 0x69, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x88, 0x01, 0x01, 0x90, 0x01, 0x01,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_metric_service_proto_rawDescOnce sync.Once
	file_metric_service_proto_rawDescData = file_metric_service_proto_rawDesc
)

func file_metric_service_proto_rawDescGZIP() []byte {
	file_metric_service_proto_rawDescOnce.Do(func() {
		file_metric_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_metric_service_proto_rawDescData)
	})
	return file_metric_service_proto_rawDescData
}

var file_metric_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_metric_service_proto_goTypes = []interface{}{
	(*UuidRequest)(nil),                 // 0: ai_flow.UuidRequest
	(*MetricMetaRequest)(nil),           // 1: ai_flow.MetricMetaRequest
	(*MetricMetaResponse)(nil),          // 2: ai_flow.MetricMetaResponse
	(*MetricSummaryRequest)(nil),        // 3: ai_flow.MetricSummaryRequest
	(*MetricSummaryResponse)(nil),       // 4: ai_flow.MetricSummaryResponse
	(*GetMetricMetaRequest)(nil),        // 5: ai_flow.GetMetricMetaRequest
	(*GetDataSetMetricMetaRequest)(nil), // 6: ai_flow.GetDataSetMetricMetaRequest
	(*GetModelMetricMetaRequest)(nil),   // 7: ai_flow.GetModelMetricMetaRequest
	(*ListMetricMetaResponse)(nil),      // 8: ai_flow.ListMetricMetaResponse
	(*GetMetricSummaryRequest)(nil),     // 9: ai_flow.GetMetricSummaryRequest
	(*ListMetricSummaryResponse)(nil),   // 10: ai_flow.ListMetricSummaryResponse
	(*MetricMetaProto)(nil),             // 11: ai_flow.MetricMetaProto
	(*MetricSummaryProto)(nil),          // 12: ai_flow.MetricSummaryProto
	(*Response)(nil),                    // 13: ai_flow.Response
}
var file_metric_service_proto_depIdxs = []int32{
	11, // 0: ai_flow.MetricMetaRequest.metric_meta:type_name -> ai_flow.MetricMetaProto
	11, // 1: ai_flow.MetricMetaResponse.metric_meta:type_name -> ai_flow.MetricMetaProto
	12, // 2: ai_flow.MetricSummaryRequest.metric_summary:type_name -> ai_flow.MetricSummaryProto
	12, // 3: ai_flow.MetricSummaryResponse.metric_summary:type_name -> ai_flow.MetricSummaryProto
	11, // 4: ai_flow.ListMetricMetaResponse.metric_meta:type_name -> ai_flow.MetricMetaProto
	12, // 5: ai_flow.ListMetricSummaryResponse.metric_summary:type_name -> ai_flow.MetricSummaryProto
	1,  // 6: ai_flow.MetricService.registerMetricMeta:input_type -> ai_flow.MetricMetaRequest
	3,  // 7: ai_flow.MetricService.registerMetricSummary:input_type -> ai_flow.MetricSummaryRequest
	1,  // 8: ai_flow.MetricService.updateMetricMeta:input_type -> ai_flow.MetricMetaRequest
	5,  // 9: ai_flow.MetricService.getMetricMeta:input_type -> ai_flow.GetMetricMetaRequest
	3,  // 10: ai_flow.MetricService.updateMetricSummary:input_type -> ai_flow.MetricSummaryRequest
	6,  // 11: ai_flow.MetricService.getDatasetMetricMeta:input_type -> ai_flow.GetDataSetMetricMetaRequest
	7,  // 12: ai_flow.MetricService.getModelMetricMeta:input_type -> ai_flow.GetModelMetricMetaRequest
	9,  // 13: ai_flow.MetricService.getMetricSummary:input_type -> ai_flow.GetMetricSummaryRequest
	0,  // 14: ai_flow.MetricService.deleteMetricMeta:input_type -> ai_flow.UuidRequest
	0,  // 15: ai_flow.MetricService.deleteMetricSummary:input_type -> ai_flow.UuidRequest
	2,  // 16: ai_flow.MetricService.registerMetricMeta:output_type -> ai_flow.MetricMetaResponse
	4,  // 17: ai_flow.MetricService.registerMetricSummary:output_type -> ai_flow.MetricSummaryResponse
	2,  // 18: ai_flow.MetricService.updateMetricMeta:output_type -> ai_flow.MetricMetaResponse
	2,  // 19: ai_flow.MetricService.getMetricMeta:output_type -> ai_flow.MetricMetaResponse
	4,  // 20: ai_flow.MetricService.updateMetricSummary:output_type -> ai_flow.MetricSummaryResponse
	8,  // 21: ai_flow.MetricService.getDatasetMetricMeta:output_type -> ai_flow.ListMetricMetaResponse
	8,  // 22: ai_flow.MetricService.getModelMetricMeta:output_type -> ai_flow.ListMetricMetaResponse
	10, // 23: ai_flow.MetricService.getMetricSummary:output_type -> ai_flow.ListMetricSummaryResponse
	13, // 24: ai_flow.MetricService.deleteMetricMeta:output_type -> ai_flow.Response
	13, // 25: ai_flow.MetricService.deleteMetricSummary:output_type -> ai_flow.Response
	16, // [16:26] is the sub-list for method output_type
	6,  // [6:16] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_metric_service_proto_init() }
func file_metric_service_proto_init() {
	if File_metric_service_proto != nil {
		return
	}
	file_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_metric_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UuidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricMetaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricMetaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricMetaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataSetMetricMetaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelMetricMetaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetricMetaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetricSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetricSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_metric_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metric_service_proto_goTypes,
		DependencyIndexes: file_metric_service_proto_depIdxs,
		MessageInfos:      file_metric_service_proto_msgTypes,
	}.Build()
	File_metric_service_proto = out.File
	file_metric_service_proto_rawDesc = nil
	file_metric_service_proto_goTypes = nil
	file_metric_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MetricServiceClient is the client API for MetricService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetricServiceClient interface {
	RegisterMetricMeta(ctx context.Context, in *MetricMetaRequest, opts ...grpc.CallOption) (*MetricMetaResponse, error)
	RegisterMetricSummary(ctx context.Context, in *MetricSummaryRequest, opts ...grpc.CallOption) (*MetricSummaryResponse, error)
	UpdateMetricMeta(ctx context.Context, in *MetricMetaRequest, opts ...grpc.CallOption) (*MetricMetaResponse, error)
	GetMetricMeta(ctx context.Context, in *GetMetricMetaRequest, opts ...grpc.CallOption) (*MetricMetaResponse, error)
	UpdateMetricSummary(ctx context.Context, in *MetricSummaryRequest, opts ...grpc.CallOption) (*MetricSummaryResponse, error)
	GetDatasetMetricMeta(ctx context.Context, in *GetDataSetMetricMetaRequest, opts ...grpc.CallOption) (*ListMetricMetaResponse, error)
	GetModelMetricMeta(ctx context.Context, in *GetModelMetricMetaRequest, opts ...grpc.CallOption) (*ListMetricMetaResponse, error)
	GetMetricSummary(ctx context.Context, in *GetMetricSummaryRequest, opts ...grpc.CallOption) (*ListMetricSummaryResponse, error)
	DeleteMetricMeta(ctx context.Context, in *UuidRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteMetricSummary(ctx context.Context, in *UuidRequest, opts ...grpc.CallOption) (*Response, error)
}

type metricServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMetricServiceClient(cc grpc.ClientConnInterface) MetricServiceClient {
	return &metricServiceClient{cc}
}

func (c *metricServiceClient) RegisterMetricMeta(ctx context.Context, in *MetricMetaRequest, opts ...grpc.CallOption) (*MetricMetaResponse, error) {
	out := new(MetricMetaResponse)
	err := c.cc.Invoke(ctx, "/ai_flow.MetricService/registerMetricMeta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) RegisterMetricSummary(ctx context.Context, in *MetricSummaryRequest, opts ...grpc.CallOption) (*MetricSummaryResponse, error) {
	out := new(MetricSummaryResponse)
	err := c.cc.Invoke(ctx, "/ai_flow.MetricService/registerMetricSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) UpdateMetricMeta(ctx context.Context, in *MetricMetaRequest, opts ...grpc.CallOption) (*MetricMetaResponse, error) {
	out := new(MetricMetaResponse)
	err := c.cc.Invoke(ctx, "/ai_flow.MetricService/updateMetricMeta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) GetMetricMeta(ctx context.Context, in *GetMetricMetaRequest, opts ...grpc.CallOption) (*MetricMetaResponse, error) {
	out := new(MetricMetaResponse)
	err := c.cc.Invoke(ctx, "/ai_flow.MetricService/getMetricMeta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) UpdateMetricSummary(ctx context.Context, in *MetricSummaryRequest, opts ...grpc.CallOption) (*MetricSummaryResponse, error) {
	out := new(MetricSummaryResponse)
	err := c.cc.Invoke(ctx, "/ai_flow.MetricService/updateMetricSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) GetDatasetMetricMeta(ctx context.Context, in *GetDataSetMetricMetaRequest, opts ...grpc.CallOption) (*ListMetricMetaResponse, error) {
	out := new(ListMetricMetaResponse)
	err := c.cc.Invoke(ctx, "/ai_flow.MetricService/getDatasetMetricMeta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) GetModelMetricMeta(ctx context.Context, in *GetModelMetricMetaRequest, opts ...grpc.CallOption) (*ListMetricMetaResponse, error) {
	out := new(ListMetricMetaResponse)
	err := c.cc.Invoke(ctx, "/ai_flow.MetricService/getModelMetricMeta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) GetMetricSummary(ctx context.Context, in *GetMetricSummaryRequest, opts ...grpc.CallOption) (*ListMetricSummaryResponse, error) {
	out := new(ListMetricSummaryResponse)
	err := c.cc.Invoke(ctx, "/ai_flow.MetricService/getMetricSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) DeleteMetricMeta(ctx context.Context, in *UuidRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/ai_flow.MetricService/deleteMetricMeta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metricServiceClient) DeleteMetricSummary(ctx context.Context, in *UuidRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/ai_flow.MetricService/deleteMetricSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetricServiceServer is the server API for MetricService service.
type MetricServiceServer interface {
	RegisterMetricMeta(context.Context, *MetricMetaRequest) (*MetricMetaResponse, error)
	RegisterMetricSummary(context.Context, *MetricSummaryRequest) (*MetricSummaryResponse, error)
	UpdateMetricMeta(context.Context, *MetricMetaRequest) (*MetricMetaResponse, error)
	GetMetricMeta(context.Context, *GetMetricMetaRequest) (*MetricMetaResponse, error)
	UpdateMetricSummary(context.Context, *MetricSummaryRequest) (*MetricSummaryResponse, error)
	GetDatasetMetricMeta(context.Context, *GetDataSetMetricMetaRequest) (*ListMetricMetaResponse, error)
	GetModelMetricMeta(context.Context, *GetModelMetricMetaRequest) (*ListMetricMetaResponse, error)
	GetMetricSummary(context.Context, *GetMetricSummaryRequest) (*ListMetricSummaryResponse, error)
	DeleteMetricMeta(context.Context, *UuidRequest) (*Response, error)
	DeleteMetricSummary(context.Context, *UuidRequest) (*Response, error)
}

// UnimplementedMetricServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMetricServiceServer struct {
}

func (*UnimplementedMetricServiceServer) RegisterMetricMeta(context.Context, *MetricMetaRequest) (*MetricMetaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterMetricMeta not implemented")
}
func (*UnimplementedMetricServiceServer) RegisterMetricSummary(context.Context, *MetricSummaryRequest) (*MetricSummaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterMetricSummary not implemented")
}
func (*UnimplementedMetricServiceServer) UpdateMetricMeta(context.Context, *MetricMetaRequest) (*MetricMetaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMetricMeta not implemented")
}
func (*UnimplementedMetricServiceServer) GetMetricMeta(context.Context, *GetMetricMetaRequest) (*MetricMetaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetricMeta not implemented")
}
func (*UnimplementedMetricServiceServer) UpdateMetricSummary(context.Context, *MetricSummaryRequest) (*MetricSummaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMetricSummary not implemented")
}
func (*UnimplementedMetricServiceServer) GetDatasetMetricMeta(context.Context, *GetDataSetMetricMetaRequest) (*ListMetricMetaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDatasetMetricMeta not implemented")
}
func (*UnimplementedMetricServiceServer) GetModelMetricMeta(context.Context, *GetModelMetricMetaRequest) (*ListMetricMetaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelMetricMeta not implemented")
}
func (*UnimplementedMetricServiceServer) GetMetricSummary(context.Context, *GetMetricSummaryRequest) (*ListMetricSummaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetricSummary not implemented")
}
func (*UnimplementedMetricServiceServer) DeleteMetricMeta(context.Context, *UuidRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMetricMeta not implemented")
}
func (*UnimplementedMetricServiceServer) DeleteMetricSummary(context.Context, *UuidRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMetricSummary not implemented")
}

func RegisterMetricServiceServer(s *grpc.Server, srv MetricServiceServer) {
	s.RegisterService(&_MetricService_serviceDesc, srv)
}

func _MetricService_RegisterMetricMeta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricMetaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).RegisterMetricMeta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.MetricService/RegisterMetricMeta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).RegisterMetricMeta(ctx, req.(*MetricMetaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_RegisterMetricSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricSummaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).RegisterMetricSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.MetricService/RegisterMetricSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).RegisterMetricSummary(ctx, req.(*MetricSummaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_UpdateMetricMeta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricMetaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).UpdateMetricMeta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.MetricService/UpdateMetricMeta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).UpdateMetricMeta(ctx, req.(*MetricMetaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_GetMetricMeta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMetricMetaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).GetMetricMeta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.MetricService/GetMetricMeta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).GetMetricMeta(ctx, req.(*GetMetricMetaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_UpdateMetricSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricSummaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).UpdateMetricSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.MetricService/UpdateMetricSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).UpdateMetricSummary(ctx, req.(*MetricSummaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_GetDatasetMetricMeta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDataSetMetricMetaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).GetDatasetMetricMeta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.MetricService/GetDatasetMetricMeta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).GetDatasetMetricMeta(ctx, req.(*GetDataSetMetricMetaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_GetModelMetricMeta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetModelMetricMetaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).GetModelMetricMeta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.MetricService/GetModelMetricMeta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).GetModelMetricMeta(ctx, req.(*GetModelMetricMetaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_GetMetricSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMetricSummaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).GetMetricSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.MetricService/GetMetricSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).GetMetricSummary(ctx, req.(*GetMetricSummaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_DeleteMetricMeta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UuidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).DeleteMetricMeta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.MetricService/DeleteMetricMeta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).DeleteMetricMeta(ctx, req.(*UuidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetricService_DeleteMetricSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UuidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricServiceServer).DeleteMetricSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai_flow.MetricService/DeleteMetricSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricServiceServer).DeleteMetricSummary(ctx, req.(*UuidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetricService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ai_flow.MetricService",
	HandlerType: (*MetricServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "registerMetricMeta",
			Handler:    _MetricService_RegisterMetricMeta_Handler,
		},
		{
			MethodName: "registerMetricSummary",
			Handler:    _MetricService_RegisterMetricSummary_Handler,
		},
		{
			MethodName: "updateMetricMeta",
			Handler:    _MetricService_UpdateMetricMeta_Handler,
		},
		{
			MethodName: "getMetricMeta",
			Handler:    _MetricService_GetMetricMeta_Handler,
		},
		{
			MethodName: "updateMetricSummary",
			Handler:    _MetricService_UpdateMetricSummary_Handler,
		},
		{
			MethodName: "getDatasetMetricMeta",
			Handler:    _MetricService_GetDatasetMetricMeta_Handler,
		},
		{
			MethodName: "getModelMetricMeta",
			Handler:    _MetricService_GetModelMetricMeta_Handler,
		},
		{
			MethodName: "getMetricSummary",
			Handler:    _MetricService_GetMetricSummary_Handler,
		},
		{
			MethodName: "deleteMetricMeta",
			Handler:    _MetricService_DeleteMetricMeta_Handler,
		},
		{
			MethodName: "deleteMetricSummary",
			Handler:    _MetricService_DeleteMetricSummary_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "metric_service.proto",
}
