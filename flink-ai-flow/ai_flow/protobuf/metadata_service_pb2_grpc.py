#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import message_pb2 as message__pb2
from . import metadata_service_pb2 as metadata__service__pb2


class MetadataServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.getExampleById = channel.unary_unary(
        '/ai_flow.MetadataService/getExampleById',
        request_serializer=metadata__service__pb2.IdRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getExampleByName = channel.unary_unary(
        '/ai_flow.MetadataService/getExampleByName',
        request_serializer=metadata__service__pb2.NameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.listExample = channel.unary_unary(
        '/ai_flow.MetadataService/listExample',
        request_serializer=metadata__service__pb2.ListRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.registerExample = channel.unary_unary(
        '/ai_flow.MetadataService/registerExample',
        request_serializer=metadata__service__pb2.RegisterExampleRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.registerExampleWithCatalog = channel.unary_unary(
        '/ai_flow.MetadataService/registerExampleWithCatalog',
        request_serializer=metadata__service__pb2.RegisterExampleRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.registerExamples = channel.unary_unary(
        '/ai_flow.MetadataService/registerExamples',
        request_serializer=metadata__service__pb2.RegisterExamplesRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.updateExample = channel.unary_unary(
        '/ai_flow.MetadataService/updateExample',
        request_serializer=metadata__service__pb2.UpdateExampleRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.deleteExampleById = channel.unary_unary(
        '/ai_flow.MetadataService/deleteExampleById',
        request_serializer=metadata__service__pb2.IdRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.deleteExampleByName = channel.unary_unary(
        '/ai_flow.MetadataService/deleteExampleByName',
        request_serializer=metadata__service__pb2.NameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getModelRelationById = channel.unary_unary(
        '/ai_flow.MetadataService/getModelRelationById',
        request_serializer=metadata__service__pb2.IdRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getModelRelationByName = channel.unary_unary(
        '/ai_flow.MetadataService/getModelRelationByName',
        request_serializer=metadata__service__pb2.NameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.listModelRelation = channel.unary_unary(
        '/ai_flow.MetadataService/listModelRelation',
        request_serializer=metadata__service__pb2.ListRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.registerModelRelation = channel.unary_unary(
        '/ai_flow.MetadataService/registerModelRelation',
        request_serializer=metadata__service__pb2.RegisterModelRelationRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.deleteModelRelationById = channel.unary_unary(
        '/ai_flow.MetadataService/deleteModelRelationById',
        request_serializer=metadata__service__pb2.IdRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.deleteModelRelationByName = channel.unary_unary(
        '/ai_flow.MetadataService/deleteModelRelationByName',
        request_serializer=metadata__service__pb2.NameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getModelById = channel.unary_unary(
        '/ai_flow.MetadataService/getModelById',
        request_serializer=metadata__service__pb2.IdRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getModelByName = channel.unary_unary(
        '/ai_flow.MetadataService/getModelByName',
        request_serializer=metadata__service__pb2.NameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.registerModel = channel.unary_unary(
        '/ai_flow.MetadataService/registerModel',
        request_serializer=metadata__service__pb2.RegisterModelRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.deleteModelById = channel.unary_unary(
        '/ai_flow.MetadataService/deleteModelById',
        request_serializer=metadata__service__pb2.IdRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.deleteModelByName = channel.unary_unary(
        '/ai_flow.MetadataService/deleteModelByName',
        request_serializer=metadata__service__pb2.NameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getModelVersionRelationByVersion = channel.unary_unary(
        '/ai_flow.MetadataService/getModelVersionRelationByVersion',
        request_serializer=metadata__service__pb2.ModelVersionNameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.listModelVersionRelation = channel.unary_unary(
        '/ai_flow.MetadataService/listModelVersionRelation',
        request_serializer=metadata__service__pb2.ListModelVersionRelationRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.registerModelVersionRelation = channel.unary_unary(
        '/ai_flow.MetadataService/registerModelVersionRelation',
        request_serializer=metadata__service__pb2.RegisterModelVersionRelationRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.deleteModelVersionRelationByVersion = channel.unary_unary(
        '/ai_flow.MetadataService/deleteModelVersionRelationByVersion',
        request_serializer=metadata__service__pb2.ModelVersionNameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getModelVersionByVersion = channel.unary_unary(
        '/ai_flow.MetadataService/getModelVersionByVersion',
        request_serializer=metadata__service__pb2.ModelVersionNameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.registerModelVersion = channel.unary_unary(
        '/ai_flow.MetadataService/registerModelVersion',
        request_serializer=metadata__service__pb2.RegisterModelVersionRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.deleteModelVersionByVersion = channel.unary_unary(
        '/ai_flow.MetadataService/deleteModelVersionByVersion',
        request_serializer=metadata__service__pb2.ModelVersionNameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getDeployedModelVersion = channel.unary_unary(
        '/ai_flow.MetadataService/getDeployedModelVersion',
        request_serializer=metadata__service__pb2.ModelNameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getLatestValidatedModelVersion = channel.unary_unary(
        '/ai_flow.MetadataService/getLatestValidatedModelVersion',
        request_serializer=metadata__service__pb2.ModelNameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getLatestGeneratedModelVersion = channel.unary_unary(
        '/ai_flow.MetadataService/getLatestGeneratedModelVersion',
        request_serializer=metadata__service__pb2.ModelNameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getWorkFlowExecutionById = channel.unary_unary(
        '/ai_flow.MetadataService/getWorkFlowExecutionById',
        request_serializer=metadata__service__pb2.IdRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getWorkFlowExecutionByName = channel.unary_unary(
        '/ai_flow.MetadataService/getWorkFlowExecutionByName',
        request_serializer=metadata__service__pb2.NameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.listWorkFlowExecution = channel.unary_unary(
        '/ai_flow.MetadataService/listWorkFlowExecution',
        request_serializer=metadata__service__pb2.ListRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.registerWorkFlowExecution = channel.unary_unary(
        '/ai_flow.MetadataService/registerWorkFlowExecution',
        request_serializer=metadata__service__pb2.RegisterWorkFlowExecutionRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.updateWorkflowExecution = channel.unary_unary(
        '/ai_flow.MetadataService/updateWorkflowExecution',
        request_serializer=metadata__service__pb2.UpdateWorkflowExecutionRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.deleteWorkflowExecutionById = channel.unary_unary(
        '/ai_flow.MetadataService/deleteWorkflowExecutionById',
        request_serializer=metadata__service__pb2.IdRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.deleteWorkflowExecutionByName = channel.unary_unary(
        '/ai_flow.MetadataService/deleteWorkflowExecutionByName',
        request_serializer=metadata__service__pb2.NameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.updateWorkflowExecutionEndTime = channel.unary_unary(
        '/ai_flow.MetadataService/updateWorkflowExecutionEndTime',
        request_serializer=metadata__service__pb2.UpdateWorkflowExecutionEndTimeRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.updateWorkflowExecutionState = channel.unary_unary(
        '/ai_flow.MetadataService/updateWorkflowExecutionState',
        request_serializer=metadata__service__pb2.UpdateWorkflowExecutionStateRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getJobById = channel.unary_unary(
        '/ai_flow.MetadataService/getJobById',
        request_serializer=metadata__service__pb2.IdRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getJobByName = channel.unary_unary(
        '/ai_flow.MetadataService/getJobByName',
        request_serializer=metadata__service__pb2.NameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.listJob = channel.unary_unary(
        '/ai_flow.MetadataService/listJob',
        request_serializer=metadata__service__pb2.ListRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.registerJob = channel.unary_unary(
        '/ai_flow.MetadataService/registerJob',
        request_serializer=metadata__service__pb2.RegisterJobRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.updateJob = channel.unary_unary(
        '/ai_flow.MetadataService/updateJob',
        request_serializer=metadata__service__pb2.UpdateJobRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.updateJobState = channel.unary_unary(
        '/ai_flow.MetadataService/updateJobState',
        request_serializer=metadata__service__pb2.UpdateJobStateRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.updateJobEndTime = channel.unary_unary(
        '/ai_flow.MetadataService/updateJobEndTime',
        request_serializer=metadata__service__pb2.UpdateJobEndTimeRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.deleteJobById = channel.unary_unary(
        '/ai_flow.MetadataService/deleteJobById',
        request_serializer=metadata__service__pb2.IdRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.deleteJobByName = channel.unary_unary(
        '/ai_flow.MetadataService/deleteJobByName',
        request_serializer=metadata__service__pb2.NameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getProjectById = channel.unary_unary(
        '/ai_flow.MetadataService/getProjectById',
        request_serializer=metadata__service__pb2.IdRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getProjectByName = channel.unary_unary(
        '/ai_flow.MetadataService/getProjectByName',
        request_serializer=metadata__service__pb2.NameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.registerProject = channel.unary_unary(
        '/ai_flow.MetadataService/registerProject',
        request_serializer=metadata__service__pb2.RegisterProjectRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.updateProject = channel.unary_unary(
        '/ai_flow.MetadataService/updateProject',
        request_serializer=metadata__service__pb2.UpdateProjectRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.listProject = channel.unary_unary(
        '/ai_flow.MetadataService/listProject',
        request_serializer=metadata__service__pb2.ListRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.deleteProjectById = channel.unary_unary(
        '/ai_flow.MetadataService/deleteProjectById',
        request_serializer=metadata__service__pb2.IdRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.deleteProjectByName = channel.unary_unary(
        '/ai_flow.MetadataService/deleteProjectByName',
        request_serializer=metadata__service__pb2.NameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getArtifactById = channel.unary_unary(
        '/ai_flow.MetadataService/getArtifactById',
        request_serializer=metadata__service__pb2.IdRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.getArtifactByName = channel.unary_unary(
        '/ai_flow.MetadataService/getArtifactByName',
        request_serializer=metadata__service__pb2.NameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.updateArtifact = channel.unary_unary(
        '/ai_flow.MetadataService/updateArtifact',
        request_serializer=metadata__service__pb2.UpdateArtifactRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.registerArtifact = channel.unary_unary(
        '/ai_flow.MetadataService/registerArtifact',
        request_serializer=metadata__service__pb2.RegisterArtifactRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.listArtifact = channel.unary_unary(
        '/ai_flow.MetadataService/listArtifact',
        request_serializer=metadata__service__pb2.ListRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.deleteArtifactById = channel.unary_unary(
        '/ai_flow.MetadataService/deleteArtifactById',
        request_serializer=metadata__service__pb2.IdRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )
    self.deleteArtifactByName = channel.unary_unary(
        '/ai_flow.MetadataService/deleteArtifactByName',
        request_serializer=metadata__service__pb2.NameRequest.SerializeToString,
        response_deserializer=message__pb2.Response.FromString,
        )


class MetadataServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def getExampleById(self, request, context):
    """example api
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getExampleByName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listExample(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def registerExample(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def registerExampleWithCatalog(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def registerExamples(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateExample(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteExampleById(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteExampleByName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getModelRelationById(self, request, context):
    """model relation api
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getModelRelationByName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listModelRelation(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def registerModelRelation(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteModelRelationById(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteModelRelationByName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getModelById(self, request, context):
    """model api
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getModelByName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def registerModel(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteModelById(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteModelByName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getModelVersionRelationByVersion(self, request, context):
    """model version relation api
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listModelVersionRelation(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def registerModelVersionRelation(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteModelVersionRelationByVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getModelVersionByVersion(self, request, context):
    """model version api
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def registerModelVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteModelVersionByVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getDeployedModelVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getLatestValidatedModelVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getLatestGeneratedModelVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getWorkFlowExecutionById(self, request, context):
    """workflow execution api
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getWorkFlowExecutionByName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listWorkFlowExecution(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def registerWorkFlowExecution(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateWorkflowExecution(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteWorkflowExecutionById(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteWorkflowExecutionByName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateWorkflowExecutionEndTime(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateWorkflowExecutionState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getJobById(self, request, context):
    """job api
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getJobByName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listJob(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def registerJob(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateJob(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateJobState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateJobEndTime(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteJobById(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteJobByName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getProjectById(self, request, context):
    """project api
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getProjectByName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def registerProject(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateProject(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listProject(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteProjectById(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteProjectByName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getArtifactById(self, request, context):
    """artifact api
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getArtifactByName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateArtifact(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def registerArtifact(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listArtifact(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteArtifactById(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteArtifactByName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MetadataServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'getExampleById': grpc.unary_unary_rpc_method_handler(
          servicer.getExampleById,
          request_deserializer=metadata__service__pb2.IdRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getExampleByName': grpc.unary_unary_rpc_method_handler(
          servicer.getExampleByName,
          request_deserializer=metadata__service__pb2.NameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'listExample': grpc.unary_unary_rpc_method_handler(
          servicer.listExample,
          request_deserializer=metadata__service__pb2.ListRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'registerExample': grpc.unary_unary_rpc_method_handler(
          servicer.registerExample,
          request_deserializer=metadata__service__pb2.RegisterExampleRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'registerExampleWithCatalog': grpc.unary_unary_rpc_method_handler(
          servicer.registerExampleWithCatalog,
          request_deserializer=metadata__service__pb2.RegisterExampleRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'registerExamples': grpc.unary_unary_rpc_method_handler(
          servicer.registerExamples,
          request_deserializer=metadata__service__pb2.RegisterExamplesRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'updateExample': grpc.unary_unary_rpc_method_handler(
          servicer.updateExample,
          request_deserializer=metadata__service__pb2.UpdateExampleRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'deleteExampleById': grpc.unary_unary_rpc_method_handler(
          servicer.deleteExampleById,
          request_deserializer=metadata__service__pb2.IdRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'deleteExampleByName': grpc.unary_unary_rpc_method_handler(
          servicer.deleteExampleByName,
          request_deserializer=metadata__service__pb2.NameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getModelRelationById': grpc.unary_unary_rpc_method_handler(
          servicer.getModelRelationById,
          request_deserializer=metadata__service__pb2.IdRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getModelRelationByName': grpc.unary_unary_rpc_method_handler(
          servicer.getModelRelationByName,
          request_deserializer=metadata__service__pb2.NameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'listModelRelation': grpc.unary_unary_rpc_method_handler(
          servicer.listModelRelation,
          request_deserializer=metadata__service__pb2.ListRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'registerModelRelation': grpc.unary_unary_rpc_method_handler(
          servicer.registerModelRelation,
          request_deserializer=metadata__service__pb2.RegisterModelRelationRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'deleteModelRelationById': grpc.unary_unary_rpc_method_handler(
          servicer.deleteModelRelationById,
          request_deserializer=metadata__service__pb2.IdRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'deleteModelRelationByName': grpc.unary_unary_rpc_method_handler(
          servicer.deleteModelRelationByName,
          request_deserializer=metadata__service__pb2.NameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getModelById': grpc.unary_unary_rpc_method_handler(
          servicer.getModelById,
          request_deserializer=metadata__service__pb2.IdRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getModelByName': grpc.unary_unary_rpc_method_handler(
          servicer.getModelByName,
          request_deserializer=metadata__service__pb2.NameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'registerModel': grpc.unary_unary_rpc_method_handler(
          servicer.registerModel,
          request_deserializer=metadata__service__pb2.RegisterModelRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'deleteModelById': grpc.unary_unary_rpc_method_handler(
          servicer.deleteModelById,
          request_deserializer=metadata__service__pb2.IdRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'deleteModelByName': grpc.unary_unary_rpc_method_handler(
          servicer.deleteModelByName,
          request_deserializer=metadata__service__pb2.NameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getModelVersionRelationByVersion': grpc.unary_unary_rpc_method_handler(
          servicer.getModelVersionRelationByVersion,
          request_deserializer=metadata__service__pb2.ModelVersionNameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'listModelVersionRelation': grpc.unary_unary_rpc_method_handler(
          servicer.listModelVersionRelation,
          request_deserializer=metadata__service__pb2.ListModelVersionRelationRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'registerModelVersionRelation': grpc.unary_unary_rpc_method_handler(
          servicer.registerModelVersionRelation,
          request_deserializer=metadata__service__pb2.RegisterModelVersionRelationRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'deleteModelVersionRelationByVersion': grpc.unary_unary_rpc_method_handler(
          servicer.deleteModelVersionRelationByVersion,
          request_deserializer=metadata__service__pb2.ModelVersionNameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getModelVersionByVersion': grpc.unary_unary_rpc_method_handler(
          servicer.getModelVersionByVersion,
          request_deserializer=metadata__service__pb2.ModelVersionNameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'registerModelVersion': grpc.unary_unary_rpc_method_handler(
          servicer.registerModelVersion,
          request_deserializer=metadata__service__pb2.RegisterModelVersionRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'deleteModelVersionByVersion': grpc.unary_unary_rpc_method_handler(
          servicer.deleteModelVersionByVersion,
          request_deserializer=metadata__service__pb2.ModelVersionNameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getDeployedModelVersion': grpc.unary_unary_rpc_method_handler(
          servicer.getDeployedModelVersion,
          request_deserializer=metadata__service__pb2.ModelNameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getLatestValidatedModelVersion': grpc.unary_unary_rpc_method_handler(
          servicer.getLatestValidatedModelVersion,
          request_deserializer=metadata__service__pb2.ModelNameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getLatestGeneratedModelVersion': grpc.unary_unary_rpc_method_handler(
          servicer.getLatestGeneratedModelVersion,
          request_deserializer=metadata__service__pb2.ModelNameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getWorkFlowExecutionById': grpc.unary_unary_rpc_method_handler(
          servicer.getWorkFlowExecutionById,
          request_deserializer=metadata__service__pb2.IdRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getWorkFlowExecutionByName': grpc.unary_unary_rpc_method_handler(
          servicer.getWorkFlowExecutionByName,
          request_deserializer=metadata__service__pb2.NameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'listWorkFlowExecution': grpc.unary_unary_rpc_method_handler(
          servicer.listWorkFlowExecution,
          request_deserializer=metadata__service__pb2.ListRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'registerWorkFlowExecution': grpc.unary_unary_rpc_method_handler(
          servicer.registerWorkFlowExecution,
          request_deserializer=metadata__service__pb2.RegisterWorkFlowExecutionRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'updateWorkflowExecution': grpc.unary_unary_rpc_method_handler(
          servicer.updateWorkflowExecution,
          request_deserializer=metadata__service__pb2.UpdateWorkflowExecutionRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'deleteWorkflowExecutionById': grpc.unary_unary_rpc_method_handler(
          servicer.deleteWorkflowExecutionById,
          request_deserializer=metadata__service__pb2.IdRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'deleteWorkflowExecutionByName': grpc.unary_unary_rpc_method_handler(
          servicer.deleteWorkflowExecutionByName,
          request_deserializer=metadata__service__pb2.NameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'updateWorkflowExecutionEndTime': grpc.unary_unary_rpc_method_handler(
          servicer.updateWorkflowExecutionEndTime,
          request_deserializer=metadata__service__pb2.UpdateWorkflowExecutionEndTimeRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'updateWorkflowExecutionState': grpc.unary_unary_rpc_method_handler(
          servicer.updateWorkflowExecutionState,
          request_deserializer=metadata__service__pb2.UpdateWorkflowExecutionStateRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getJobById': grpc.unary_unary_rpc_method_handler(
          servicer.getJobById,
          request_deserializer=metadata__service__pb2.IdRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getJobByName': grpc.unary_unary_rpc_method_handler(
          servicer.getJobByName,
          request_deserializer=metadata__service__pb2.NameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'listJob': grpc.unary_unary_rpc_method_handler(
          servicer.listJob,
          request_deserializer=metadata__service__pb2.ListRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'registerJob': grpc.unary_unary_rpc_method_handler(
          servicer.registerJob,
          request_deserializer=metadata__service__pb2.RegisterJobRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'updateJob': grpc.unary_unary_rpc_method_handler(
          servicer.updateJob,
          request_deserializer=metadata__service__pb2.UpdateJobRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'updateJobState': grpc.unary_unary_rpc_method_handler(
          servicer.updateJobState,
          request_deserializer=metadata__service__pb2.UpdateJobStateRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'updateJobEndTime': grpc.unary_unary_rpc_method_handler(
          servicer.updateJobEndTime,
          request_deserializer=metadata__service__pb2.UpdateJobEndTimeRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'deleteJobById': grpc.unary_unary_rpc_method_handler(
          servicer.deleteJobById,
          request_deserializer=metadata__service__pb2.IdRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'deleteJobByName': grpc.unary_unary_rpc_method_handler(
          servicer.deleteJobByName,
          request_deserializer=metadata__service__pb2.NameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getProjectById': grpc.unary_unary_rpc_method_handler(
          servicer.getProjectById,
          request_deserializer=metadata__service__pb2.IdRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getProjectByName': grpc.unary_unary_rpc_method_handler(
          servicer.getProjectByName,
          request_deserializer=metadata__service__pb2.NameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'registerProject': grpc.unary_unary_rpc_method_handler(
          servicer.registerProject,
          request_deserializer=metadata__service__pb2.RegisterProjectRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'updateProject': grpc.unary_unary_rpc_method_handler(
          servicer.updateProject,
          request_deserializer=metadata__service__pb2.UpdateProjectRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'listProject': grpc.unary_unary_rpc_method_handler(
          servicer.listProject,
          request_deserializer=metadata__service__pb2.ListRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'deleteProjectById': grpc.unary_unary_rpc_method_handler(
          servicer.deleteProjectById,
          request_deserializer=metadata__service__pb2.IdRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'deleteProjectByName': grpc.unary_unary_rpc_method_handler(
          servicer.deleteProjectByName,
          request_deserializer=metadata__service__pb2.NameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getArtifactById': grpc.unary_unary_rpc_method_handler(
          servicer.getArtifactById,
          request_deserializer=metadata__service__pb2.IdRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'getArtifactByName': grpc.unary_unary_rpc_method_handler(
          servicer.getArtifactByName,
          request_deserializer=metadata__service__pb2.NameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'updateArtifact': grpc.unary_unary_rpc_method_handler(
          servicer.updateArtifact,
          request_deserializer=metadata__service__pb2.UpdateArtifactRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'registerArtifact': grpc.unary_unary_rpc_method_handler(
          servicer.registerArtifact,
          request_deserializer=metadata__service__pb2.RegisterArtifactRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'listArtifact': grpc.unary_unary_rpc_method_handler(
          servicer.listArtifact,
          request_deserializer=metadata__service__pb2.ListRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'deleteArtifactById': grpc.unary_unary_rpc_method_handler(
          servicer.deleteArtifactById,
          request_deserializer=metadata__service__pb2.IdRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
      'deleteArtifactByName': grpc.unary_unary_rpc_method_handler(
          servicer.deleteArtifactByName,
          request_deserializer=metadata__service__pb2.NameRequest.FromString,
          response_serializer=message__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ai_flow.MetadataService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
