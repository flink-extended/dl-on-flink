name: Nightly Build
on:
  schedule:
    - cron: '0 16 * * *'
  workflow_dispatch:
jobs:
  deploy-snapshot:
    if: github.repository == 'flink-extended/dl-on-flink'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Set up python 3.7
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.7'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'
      - name: Install Python dependencies
        run: |
          pip install -U --user wheel
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          server-id: oss_id
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Publish snapshot
        run: mvn -B clean deploy -Prelease
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      - uses: actions/upload-artifact@v2
        with:
          name: flink-ml-dist
          path: flink-ml-dist/target/flink-ml-dist-*-bin
  build-nightly-wheel:
    name: Build ${{ matrix.package }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macOS-10.15, ubuntu-20.04 ]
        package:
          - flink-ml-framework
          - flink-ml-tensorflow
          - flink-ml-tensorflow-2.x
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Build ${{ matrix.package }} wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_ARCHS: "auto64"
          CIBW_SKIP: "pp* *musllinux*"
          CIBW_ENVIRONMENT: NIGHTLY_WHEEL=true
        with:
          package-dir: ${{ matrix.package }}/python
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.package }}-wheels
          path: ./wheelhouse/*.whl
